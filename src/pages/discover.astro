---
import Player from "../components/Player";
import Layout from "../layouts/Layout.astro";
import { supabase } from "../lib/supabase";
import type { DevicesResponse, PlaylistInformation } from "../lib/types";

const { cookies, url, redirect } = Astro;

const accessToken = cookies.get("sb-access-token");
const refreshToken = cookies.get("sb-refresh-token");

if (!accessToken || !refreshToken) {
  return redirect("/");
}

const { data, error } = await supabase.auth.setSession({
  refresh_token: refreshToken.value,
  access_token: accessToken.value,
});

if (error || !cookies.has('spotify-access-token')) {
  cookies.delete("sb-access-token", {
    path: "/",
  });
  cookies.delete("sb-refresh-token", {
    path: "/",
  });

  return redirect("/");
}

// const user = await supabase.auth.getUser()
const spotify_access_token = cookies.get("spotify-access-token")?.value;
const playlist_id = url.searchParams.get("p");

// Obtendriamos info de la playlist del usuario donde luego agregaremos las canciones que venga como parametro
const playlist: PlaylistInformation = await fetch(`https://api.spotify.com/v1/playlists/${playlist_id}`,{
   headers: {
        'Authorization': `Bearer ${spotify_access_token}`
    }
})
.then(response => response.json());

const getCurrentDevice = async (spotifyToken:string) => {
  const {devices}:DevicesResponse = await fetch('https://api.spotify.com/v1/me/player/devices',
  {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${spotifyToken}`
    }
  }).then(res => res.json());
  const currentDevice = devices.find(device => device.is_active || device.supports_volume) ?? devices[0];
  return currentDevice ? currentDevice : null;
}

const currentDevice = await getCurrentDevice(spotify_access_token!);

cookies.set('spotify-device', currentDevice ?? "" , {
  path: '/'
});
---

<Layout title="Discover">
    <div class="text-white">
      <header class="flex flex-col items-center justify-center mb-4">
        <h1 class="text-gradient">Discover new music</h1>
        <p class="italic -mt-2 text-gray-400 ">Listen to some chunk-songs & add to your playlist if you liked them!</p>
      </header>

        <main>
          <header class="mb-2">
            <h2 class="font-bold">Playlist selected: {playlist.name}</h2>
            <p class="text-gray-400 italic text-sm">Remember you can only add music to your own playlists</p>
          </header>
<!-- 
            <ul class="flex gap-2 flex-wrap ">
                {userplaylists.map((playlist) => (
                  <PlayListPick playlist={playlist} />
                ))}
            </ul> -->

            <div>
              <Player client:load spotifyToken={spotify_access_token!} currentDevice={currentDevice}/>
            </div>
        </main>
    </div>
</Layout>

<style>
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
	}
</style>
