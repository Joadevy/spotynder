---
import Layout from "../layouts/Layout.astro";
import { supabase } from "../lib/supabase";
import type { PlaylistItem } from "../lib/types";

const { cookies, redirect } = Astro;

const accessToken = cookies.get("sb-access-token");
const refreshToken = cookies.get("sb-refresh-token");

if (!accessToken || !refreshToken) {
  return redirect("/");
}

const { data, error } = await supabase.auth.setSession({
  refresh_token: refreshToken.value,
  access_token: accessToken.value,
});

if (error || !cookies.has('spotify-access-token')) {
  cookies.delete("sb-access-token", {
    path: "/",
  });
  cookies.delete("sb-refresh-token", {
    path: "/",
  });

  return redirect("/");
}

// const user = await supabase.auth.getUser()

// const user_id = user.data.user?.user_metadata.sub; // esto representa el user_id de SPOTIFY (con esto se pueden traer  playlists, etc)
const spotify_access_token = cookies.get("spotify-access-token")?.value;

const {items: userplaylists} : { items: PlaylistItem[] } = await fetch(`https://api.spotify.com/v1/me/playlists`,{
   headers: {
        'Authorization': `Bearer ${spotify_access_token}`
    }
})
.then(response => response.json());
---

<Layout title="dashboard">
    <div class="text-white">
        <h1>Welcome to spotynder !</h1>
        <p>We are happy to see you here</p>
        <div>
            <h2>Playlists</h2>
            <ul>
                {userplaylists.map((playlist) => (
                    <li>{playlist.name}</li>
                ))}
            </ul>
        </div>
        <form action="/api/auth/signout">
          <button type="submit">Sign out</button>
        </form>
    </div>
</Layout>